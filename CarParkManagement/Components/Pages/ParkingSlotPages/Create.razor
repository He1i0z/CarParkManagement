@page "/parkingslots/create"
@using Microsoft.EntityFrameworkCore
@using CarParkManagement.Domain
@inject IDbContextFactory<CarParkManagement.Data.CarParkManagementContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>ParkingSlot</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ParkingSlot" OnValidSubmit="AddParkingSlot" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="slotnumber" class="form-label">SlotNumber:</label> 
                <InputText id="slotnumber" @bind-Value="ParkingSlot.SlotNumber" class="form-control" /> 
                <ValidationMessage For="() => ParkingSlot.SlotNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="inavailable" class="form-label">InAvailable:</label> 
                <InputCheckbox id="inavailable" @bind-Value="ParkingSlot.InAvailable" class="form-check-input" /> 
                <ValidationMessage For="() => ParkingSlot.InAvailable" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="floorlevel" class="form-label">Floorlevel:</label> 
                <InputText id="floorlevel" @bind-Value="ParkingSlot.Floorlevel" class="form-control" /> 
                <ValidationMessage For="() => ParkingSlot.Floorlevel" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="location" class="form-label">Location:</label> 
                <InputText id="location" @bind-Value="ParkingSlot.Location" class="form-control" /> 
                <ValidationMessage For="() => ParkingSlot.Location" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/parkingslots">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ParkingSlot ParkingSlot { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddParkingSlot()
    {
        using var context = DbFactory.CreateDbContext();
        context.ParkingSlot.Add(ParkingSlot);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/parkingslots");
    }
}
